// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/controller/rainbondvolume/plugin/plugin.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCSIPlugin is a mock of CSIPlugin interface
type MockCSIPlugin struct {
	ctrl     *gomock.Controller
	recorder *MockCSIPluginMockRecorder
}

// MockCSIPluginMockRecorder is the mock recorder for MockCSIPlugin
type MockCSIPluginMockRecorder struct {
	mock *MockCSIPlugin
}

// NewMockCSIPlugin creates a new mock instance
func NewMockCSIPlugin(ctrl *gomock.Controller) *MockCSIPlugin {
	mock := &MockCSIPlugin{ctrl: ctrl}
	mock.recorder = &MockCSIPluginMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCSIPlugin) EXPECT() *MockCSIPluginMockRecorder {
	return m.recorder
}

// CheckIfCSIDriverExists mocks base method
func (m *MockCSIPlugin) CheckIfCSIDriverExists() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckIfCSIDriverExists")
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckIfCSIDriverExists indicates an expected call of CheckIfCSIDriverExists
func (mr *MockCSIPluginMockRecorder) CheckIfCSIDriverExists() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckIfCSIDriverExists", reflect.TypeOf((*MockCSIPlugin)(nil).CheckIfCSIDriverExists))
}

// GetProvisioner mocks base method
func (m *MockCSIPlugin) GetProvisioner() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProvisioner")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetProvisioner indicates an expected call of GetProvisioner
func (mr *MockCSIPluginMockRecorder) GetProvisioner() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProvisioner", reflect.TypeOf((*MockCSIPlugin)(nil).GetProvisioner))
}

// GetResources mocks base method
func (m *MockCSIPlugin) GetResources() []interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResources")
	ret0, _ := ret[0].([]interface{})
	return ret0
}

// GetResources indicates an expected call of GetResources
func (mr *MockCSIPluginMockRecorder) GetResources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResources", reflect.TypeOf((*MockCSIPlugin)(nil).GetResources))
}
